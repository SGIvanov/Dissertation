############################ input configuration sections
[infered-images]
path_to_search = ./evaluation
filename_contains = window_seg_, __segmentation_niftynet
spatial_window_size = (144, 144, 144)
interp_order = 3

[i-labels]
path_to_search = ./evaluation
filename_contains = training_axial_full_, _label_A
spatial_window_size = (144, 144, 144)
interp_order = 3

############################## system configuration sections
[SYSTEM]
cuda_devices = 0
num_gpus = 1
model_dir = ./models/
queue_length = 10

[NETWORK]
name = dense_vnet
batch_size = 1
volume_padding_size = 0
window_sampling = resize

[TRAINING]
sample_per_volume = 1
lr = 0.001
loss_type = Dice
starting_iter = 0
max_iter = 1000
save_every_n = 10

# data augmentation
# rotation_angle = (90, 180, 270)
# random_flipping_axes = 1
# scaling_percentage = (0.8, 1.2)
tensorboard_every_n = 20

[INFERENCE]
border = (0, 0, 0)
output_interp_order = 3
spatial_window_size = (144, 144, 144)
save_seg_dir = ./testing/

[EVALUATION]
save_csv_dir = ./evaluation-result
evaluations = dice,jaccard,false_positive_rate,positive_predictive_values,n_pos_ref,n_pos_seg
evaluation_units = label

############################ custom configuration sections
[SEGMENTATION]
inferred = infered-images
label = i-labels
label_normalisation = False
output_prob = False
num_classes = 3
